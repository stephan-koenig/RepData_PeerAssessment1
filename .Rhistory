install.packages("dplyr")
install.packages("lubridate")
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("knitR")
yes
install.packages("knitr")
install.packages("stringi")
install.packages(c("MASS", "mgcv"))
install.packages(c("lubridate", "Matrix", "Rcpp"))
install.packages("mgcv")
install.packages("mgcv")
install.packages(c("BH", "knitr"))
install.packages(c("digest", "nlme", "Rcpp"))
install.packages("nlme")
install.packages("nlme")
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0,]
names(trainSpam)
trainSpam = spam[trainIndicator == 1, ]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dis(t(log10(trainSpam[, 1:55]))))
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55]))))
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {}
lmFormula = reformulate(names(trainSpam)[i], reponse = "numType")
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormulat, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(tainSpam, glmFit, costFunction, 2)$delta[2]
}
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(tainSpam, glmFit, costFunction, 2)$delta[2]
}
for (i in 1:55) {
+ lmFormula = reformulate(names(trainSpam)[i], response = "numType")
+ glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
+ cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)
install.packages("ProjectTemplate")
setwd("/Users/skoenig/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1")
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
hist(dailyActivity$totalSteps)
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
summary(dailyActivity)
source('~/Documents/Data Science/5_Reproducible_Research/RepData_PeerAssessment1/activity_analysis.R')
print meanSteps
print(meanSteps)
type(meanSteps)
class(meanSteps)
knit2html()
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
```{r loadPackages, echo=FALSE, results='hide', message=FALSE}
# Load all required packages installing any that are missing.
requiredPackages <- c("dplyr", "ggplot2")
missingPackages <- !is.element(requiredPackages, installed.packages()[,1])
missingPackages <- requiredPackages[missingPackages]
if (length(missingPackages) != 0) install.packages(missingPackages)
lapply(requiredPackages, library, character.only = TRUE)
rm(requiredPackages, missingPackages)
```
## Loading and preprocessing the data
```{r loadData, echo=FALSE}
# Time when copy of activity.zip in this fork was downloaded.
dateDownloaded <- "Sat Jan 23 22:13:46 2016"
# Download data if not present and update time when the copy was downloaded.
if (!file.exists("activity.zip") && !file.exists("activity.csv")) {
url = paste("https://d396qusza40orc.cloudfront.net/",
"repdata%2Fdata%2Factivity.zip", sep = "")
# Determine download.file method based on OS.
if (.Platform$OS.type == "unix") {
osMethod = "libcurl"
} else {
osMethod = "wininet"
}
download.file(url, "activity.zip", method = osMethod)
dateDownloaded <- date()
rm(url, osMethod)
}
# If .csv data file is not present if not unzip activity.zip
if (!file.exists("activity.csv")) {
unzip("activity.zip")
}
# Load .csv file as data frame table
activity <- tbl_df(read.csv("activity.csv"))
```
File downloaded on: `r dateDownloaded`
## What is mean total number of steps taken per day?
```{r}
# Discard row with NAs, group by day, and calculate total steps per day.
dailyActivity <- na.omit(activity) %>% group_by(date) %>%
summarize(totalSteps = sum(steps))
```
```{r histogramSteps, echo=FALSE}
# Make a histogram of the total number of steps taken each day.
# Determine optimal binwidth for histogram using the Freedman-Diaconis rule.
binNumber <- nclass.FD(dailyActivity$totalSteps)
# Construct histogram
ggplot(dailyActivity, aes(totalSteps)) +
geom_histogram(aes(y = ..count../sum(..count..)),
origin = min(dailyActivity$totalSteps),
bins = binNumber,
col = "black",
right = TRUE,
fill= "grey",
na.rm = TRUE) +
xlim(c(min(dailyActivity$totalSteps),
max(dailyActivity$totalSteps))) +
ggtitle("Normalized Histogram of Total Steps Per Day") +
xlab("total steps per day") +
ylab("percent of days")
```
```{r meanMedianCalc, echo=FALSE}
# Calculate mean and median of the total steps taken per day
meanSteps <- mean(dailyActivity$totalSteps)
medianSteps <- median(dailyActivity$totalSteps)
```
The mean is `r format(meanSteps, digits = 7)` and the median is `r medianSteps`
for total number of steps taken per day.
## What is the average daily activity pattern?
```{r}
intervalActivity <- na.omit(activity) %>% group_by(interval) %>%
summarize(meanSteps = mean(steps))
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
intervalActivity
View(intervalActivity)
source('~/.active-rstudio-document', echo=TRUE)
any(is.na(intervalActivity))
test <- group_by(activity, date)
test
n_distinct(activity$date)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
any(is.na(dailyActivity))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
min(dailyActivity$totalSteps)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
class(min(dailyActivity$totalSteps))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
numeric(min(dailyActivity$totalSteps))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
seq(min(dailyActivity$totalSteps),
min(dailyActivity$totalSteps),
length.out = binNumber)
seq(min(dailyActivity$totalSteps),
max(dailyActivity$totalSteps),
length.out = binNumber)
source('~/.active-rstudio-document', echo=TRUE)
seq(min(dailyActivity$totalSteps),
max(dailyActivity$totalSteps),
length.out = binNumber)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
seq(min(dailyActivity$totalSteps),
max(dailyActivity$totalSteps),
length.out = binNumber + 1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(dailyActivity)
source('~/.active-rstudio-document', echo=TRUE)
View(dailyActivity)
View(dailyActivity)
View(activity)
View(activity)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(numberDays)
source('~/.active-rstudio-document', echo=TRUE)
View(numberDays)
source('~/.active-rstudio-document', echo=TRUE)
View(numberDays)
View(numberDays)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
